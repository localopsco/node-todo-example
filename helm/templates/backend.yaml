# Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: be-deployment
spec:
  replicas: {{ .Values.be.replicaCount }}
  selector:
    matchLabels:
      app: be-template
  template:
    metadata:
      labels:
        app: be-template
    spec:
      containers:
        - name: be-container
          image: "{{ .Values.be.image.repository }}:{{ .Values.be.image.tag }}"
          {{- if .Values.be.image.pullPolicy }}
          imagePullPolicy: {{ .Values.be.image.pullPolicy }}
          {{- end }}
          env:
            - name: PORT
              value: "{{ .Values.be.service.targetPort }}"
            - name: APP_VERSION
              value: "{{ .Chart.AppVersion }}"
            - name: DB_HOST
              value: {{ include "postgresql.host" . | quote }}
            - name: DB_PORT
              value: "{{ .Values.postgresql.primary.service.port }}"
            - name: DB_NAME
              value: "{{ .Values.postgresql.auth.database }}"
            - name: DB_USER
              value: "{{ .Values.postgresql.auth.username }}"
            - name: DB_PASS
              value: "{{ .Values.postgresql.auth.password }}"
            - name: S3_ENABLED
              value: "{{ .Values.s3.enabled }}"
            {{- if .Values.s3.enabled }}
            - name: S3_REGION
              value: "{{ .Values.s3.region }}"
            - name: S3_BUCKET_NAME
              value: "{{ .Values.s3.bucket }}"
            {{- end }}
{{ toYaml .Values.be.env | indent 12 }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: cloud-provider-secret
                  key: aws_access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: cloud-provider-secret
                  key: aws_secret_access_key
          {{- end }}
          ports:
            - name: be
              containerPort: {{ .Values.be.service.targetPort }}
      initContainers:
      - name: check-db-ready
        image: postgres:14.8-alpine3.18
        env:
            - name: POSTGRES_HOST
              value: {{ include "postgresql.host" . | quote }}
            - name: POSTGRES_PORT
              value: "{{ .Values.postgresql.primary.service.port }}"
        command: ['sh', '-c',
          'echo Checking if postgres is up; until pg_isready -h $POSTGRES_HOST -p $POSTGRES_PORT;
          do echo Waiting for postgres database to be up...; sleep 2; done; echo Postgres is up!']

---

# Backend Service

apiVersion: v1
kind: Service
metadata:
  name: be-service
spec:
  type: {{ .Values.be.service.type }}
  selector:
    app: be-template
  ports:
    - protocol: TCP
      port: {{ .Values.be.service.port }}
      targetPort: {{ .Values.be.service.targetPort }}
